<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="resMapper">
   <resultMap id="resResultSet" type="Reservation">
      <id property="resNo" column="RES_NO" />
      <result property="resDate" column="RES_DATE" />
      <result property="roomNo" column="ROOM_NO" />
      <result property="resInfo" column="RES_INFO" />
      <result property="startTime" column="START_TIME" />
      <result property="endTime" column="END_TIME" />
      
      <result property="mocNo" column="MOC_NO" />
      <result property="mocName" column="MOC_NAME" />
      
      <result property="maNo" column="MA_NO" />
      <result property="maName" column="MA_NAME" />
      
      <result property="roomNo" column="ROOM_NO" />
      <result property="roomNumber" column="ROOM_NUMBER" />
      <result property="roomChair" column="ROOM_CHAIR" />
      
      <result property="urNo" column="UR_NO" />
      <result property="urDate" column="UR_DATE" />
      <result property="urAddress" column="UR_ADDRESS" />
      <result property="urRes" column="UR_RES" />
      <result property="urPeople1" column="UR_PEOPLE" />
      <result property="urPeople2" column="UR_PEOPLE2" />
      <result property="urPrice" column="UR_PRICE" />
      
      <result property="memNo" column="USER_NO" />
      
      <association property="movie" javaType="Movie">
         <result property="movieNo" column="MOVIE_NO" />
         <result property="movieName" column="MOVIE_NAME" />
         <result property="movieAge" column="MOVIE_AGE" />
         <result property="genreCode" column="GENRE_CODE" />
         <result property="movieRdate" column="MOVIE_RDATE" />
         <result property="movieRstatus" column="MOVIE_RSTATUS" />
         <result property="moviePrice" column="MOVIE_PRICE" />
         <result property="movieLink" column="MOVIE_LINK" />
         <result property="movieForeman" column="MOVIE_FOREMAN" />
         <result property="movieProducer" column="MOVIE_PRODUCER" />
         <result property="movieActor" column="MOVIE_ACTOR" />
         <result property="movieStime" column="MOVIE_STIME" />
         <result property="movieCountry" column="MOVIE_COUNTRY" />
         <result property="movieContent" column="MOVIE_CONTENT" />
         <result property="movieVodStatus" column="MOVIE_VOD_STATUS" />
         <result property="genreName" column="GENRE_NAME" />
         <collection property="attachList" javaType="java.util.ArrayList" resultMap="attachmentResultSet"/>
      </association>
   </resultMap>
   
   <resultMap id="attachmentResultSet" type="Attachment">
         <id property="fileNo" column="FILE_NO" />
         <result property="sortCode" column="SORT_CODE" />
         <result property="filePath" column="FILE_PATH" />
         <result property="originFileName" column="ORIGIN_FILENAME" />
         <result property="renameFileName" column="RENAME_FILENAME" />
         <result property="fileStatus" column="FILE_STATUS" />
         <result property="movieNo" column="MOVIE_NO" />
         <result property="userNo" column="USER_NO" />
         <result property="snackNo" column="SNACK_NO" />
         <result property="goodsNo" column="GOODS_NO" />
   </resultMap>
   
   <resultMap id="reviewResultSet" type="Review">
         <id property="reNo" column="R_NO" />
         <result property="reSort" column="R_SORT" />
         <result property="reScore" column="R_SCORE" />
         <result property="reContent" column="R_CONTENT" />
         <result property="reEnrollDate" column="R_ENROLL_DATE" />
         <result property="reModifyDate" column="R_MODIFY_DATE" />
         <result property="userNo" column="USER_NO" />
         <result property="movieNo" column="MOVIE_NO" />
         <result property="reWriter" column="USER_ID" />
         <result property="filePath" column="FILE_PATH" />
         <result property="originFileName" column="ORIGIN_FILENAME" />
         <result property="renameFileName" column="RENAME_FILENAME" />
   </resultMap>
   
   <resultMap id="movResultSet" type="Movie">
      <id property="movieNo" column="MOVIE_NO" />
      <result property="movieName" column="MOVIE_NAME" />
      <result property="movieAge" column="MOVIE_AGE" />
      <result property="genreCode" column="GENRE_CODE" />
      <result property="movieRdate" column="MOVIE_RDATE" />
      <result property="movieRstatus" column="MOVIE_RSTATUS" />
      <result property="moviePrice" column="MOVIE_PRICE" />
      <result property="movieLink" column="MOVIE_LINK" />
      <result property="movieForeman" column="MOVIE_FOREMAN" />
      <result property="movieProducer" column="MOVIE_PRODUCER" />
      <result property="movieActor" column="MOVIE_ACTOR" />
      <result property="movieStime" column="MOVIE_STIME" />
      <result property="movieCountry" column="MOVIE_COUNTRY" />
      <result property="movieContent" column="MOVIE_CONTENT" />
      <result property="movieVodStatus" column="MOVIE_VOD_STATUS" />
      <result property="genreName" column="GENRE_NAME" />
      <result property="score" column="GOOD_SCORE" />
      <result property="resPeople" column="RESPEOPLE" />
      <collection property="attachList" javaType="java.util.ArrayList" resultMap="attachmentResultSet"/>
   </resultMap>
   
   <select id="resSelectAll" resultMap="resResultSet">
      SELECT *
      FROM MOVIE_RES
      JOIN MOVIE USING(MOVIE_NO)
      JOIN MOVIE_ROOM USING(ROOM_NO)
      JOIN MOVIE_AREA USING(MA_NO)
      JOIN MOVIE_CITY USING(MOC_NO)
   </select>
   
   <select id="movSelectAll" resultMap="movResultSet">
      SELECT MOVIE_NO,MOVIE_NO,MOVIE_NAME,MOVIE_AGE,GENRE_CODE,MOVIE_RDATE,MOVIE_RSTATUS,MOVIE_PRICE,MOVIE_LINK,MOVIE_FOREMAN,MOVIE_PRODUCER,MOVIE_ACTOR,MOVIE_STIME,MOVIE_COUNTRY,MOVIE_CONTENT,MOVIE_VOD_STATUS, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME, FILE_STATUS,NVL((SUM(UR_PEOPLE)+SUM(UR_PEOPLE2)), 0) AS RESPEOPLE
      FROM MOVIE_RES
      JOIN MOVIE USING (MOVIE_NO)
      JOIN ATTACHMENT USING (MOVIE_NO)
      LEFT JOIN USER_RESMOVIE USING (RES_NO)
      WHERE MOVIE_RSTATUS = 'Y'
      AND RES_DATE >= TO_CHAR(SYSDATE,'YYYYMMDD')
      AND FILE_STATUS = 'Y'
      AND SORT_CODE = 20
        GROUP BY MOVIE_NO,MOVIE_NO,MOVIE_NAME,MOVIE_AGE,GENRE_CODE,MOVIE_RDATE,MOVIE_RSTATUS,MOVIE_PRICE,MOVIE_LINK,MOVIE_FOREMAN,MOVIE_PRODUCER,MOVIE_ACTOR,MOVIE_STIME,MOVIE_COUNTRY,MOVIE_CONTENT,MOVIE_VOD_STATUS, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME, FILE_STATUS
      ORDER BY RESPEOPLE DESC, MOVIE_RDATE DESC
   </select>
   
   <select id="aSelectAll" resultMap="resResultSet">
      SELECT *
      FROM MOVIE_CITY
   </select>
   
   <select id="pSelect" resultMap="resResultSet">
      SELECT MA_NO, MA_NAME
      FROM MOVIE_AREA
      JOIN MOVIE_CITY USING(MOC_NO)
      WHERE MOC_NO = #{num}
   </select>
   
   <select id="playMovie" resultMap="resResultSet">
      SELECT *
      FROM MOVIE_RES
      JOIN MOVIE USING (MOVIE_NO)
      JOIN MOVIE_ROOM USING (ROOM_NO)
      JOIN MOVIE_AREA USING (MA_NO)
      JOIN MOVIE_CITY USING (MOC_NO)
      WHERE MOVIE_NO = #{movie.movieNo}
      AND MOC_NO = #{mocNo}
      AND MA_NO = #{maNo}
      AND RES_DATE = #{resDate}
        AND TO_DATE((TO_CHAR(RES_DATE,'YYYY/MM/DD')|| '/' || START_TIME),'YYYY/MM/DD/hh24:mI') >  SYSDATE
      ORDER BY START_TIME, ROOM_NUMBER
   </select>
   
   <select id="movListOn" resultMap="movResultSet">
      SELECT DISTINCT(MOVIE_NO), MOVIE_AGE, MOVIE_NAME, MOVIE_RDATE, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME, NVL((SUM(UR_PEOPLE)+SUM(UR_PEOPLE2)), 0) AS RESPEOPLE
      FROM MOVIE
      LEFT JOIN ATTACHMENT USING(MOVIE_NO)
      LEFT JOIN MOVIE_RES USING(MOVIE_NO)
      LEFT JOIN USER_RESMOVIE USING (RES_NO)
      WHERE MOVIE_RSTATUS = 'Y'
      AND SYSDATE > TO_CHAR(MOVIE_RDATE,'YYYYMMDD')
      AND SORT_CODE = 20
      GROUP BY MOVIE_NO, MOVIE_AGE, MOVIE_NAME, MOVIE_RDATE, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME
      ORDER BY RESPEOPLE DESC, MOVIE_RDATE DESC
   </select>
   
   <select id="movListWait" resultMap="movResultSet">
      SELECT *
      FROM MOVIE
      JOIN GENRE USING(GENRE_CODE)
      JOIN ATTACHMENT USING (MOVIE_NO)
      WHERE MOVIE_RSTATUS = 'Y'
      AND TO_CHAR(MOVIE_RDATE,'YYYYMMDD') > SYSDATE
      AND FILE_STATUS = 'Y'
      AND SORT_CODE = 20
      ORDER BY MOVIE_RDATE DESC
   </select>
   
   <select id="movListOff" resultMap="movResultSet">
      SELECT *
      FROM MOVIE
      JOIN GENRE USING(GENRE_CODE)
      JOIN ATTACHMENT USING (MOVIE_NO)
      WHERE MOVIE_RSTATUS = 'N'
      AND FILE_STATUS = 'Y'
      AND SORT_CODE = 20
      ORDER BY MOVIE_RDATE DESC
   </select>
   
   <select id="movieInfo" resultMap="movResultSet">
      SELECT *
      FROM MOVIE
      JOIN ATTACHMENT USING (MOVIE_NO)
      JOIN GENRE USING(GENRE_CODE)
      WHERE FILE_STATUS = 'Y'
      AND MOVIE_NO = #{movieNum}
      ORDER BY FILE_NO
   </select>
   
   <select id="reviewList" resultMap="reviewResultSet">
      SELECT R_NO,R_SORT,R_SCORE,R_CONTENT,R_ENROLL_DATE,R_MODIFY_DATE,USER_NO,MOVIE_NO, USER_ID, MOVIE_NAME
      FROM REVIEW
      JOIN MOVIE USING(MOVIE_NO)
      JOIN MEMBER USING(USER_NO)
      WHERE MOVIE_NO = #{movieNum}
      AND R_SORT = 'M'
   </select>
   
   <select id="resSeatSelect" resultMap="resResultSet">
      SELECT *
      FROM MOVIE_RES
      JOIN MOVIE USING(MOVIE_NO)
      JOIN MOVIE_ROOM USING (ROOM_NO)
      JOIN MOVIE_AREA USING (MA_NO)
      JOIN MOVIE_CITY USING(MOC_NO)
      JOIN ATTACHMENT USING (MOVIE_NO)
      WHERE RES_NO = #{placeValue}
      AND SORT_CODE = 20
   </select>
   
   <update id="updateResInfo">
      UPDATE MOVIE_RES
         SET RES_INFO = #{resInfo}
         WHERE RES_NO = #{resNo}
   </update>
   
   <insert id="updateRes" parameterType="Reservation">
      INSERT INTO USER_RESMOVIE
      VALUES(SEQ_UR_NO.NEXTVAL , #{memNo},#{resNo},SYSDATE, #{urAddress}, #{urRes}, #{urPeople1}, #{urPeople2}, #{urPrice} )
   </insert>
   
   <insert id="updatePay" parameterType="Reservation">
      INSERT INTO PAYMENT
      VALUES(SEQ_PAY_NO.NEXTVAL , SEQ_UR_NO.CURRVAL ,NULL,#{urPrice}, '무통장', SYSDATE, DEFAULT )
   </insert>
   
   <insert id="updateCard" parameterType="Reservation">
      INSERT INTO PAYMENT
      VALUES(SEQ_PAY_NO.NEXTVAL , SEQ_UR_NO.CURRVAL ,NULL,#{urPrice}, '카드', SYSDATE, DEFAULT )
   </insert>
   
   <select id="rSelectList" resultMap="reviewResultSet">
      SELECT *
      FROM REVIEW R
      JOIN MOVIE O ON(R.MOVIE_NO = O.MOVIE_NO)
      JOIN MEMBER M  ON(R.USER_NO = M.USER_NO)
      LEFT JOIN ATTACHMENT A ON(R.USER_NO = A.USER_NO)
      WHERE O.MOVIE_NO = #{movieNum}
      AND R.R_SORT = 'M'
      AND (SORT_CODE = '10' OR SORT_CODE IS NULL)
   </select>
   
   <select id="searchMovie" resultMap="movResultSet">
      SELECT *
      FROM MOVIE
      JOIN GENRE USING(GENRE_CODE)
      JOIN ATTACHMENT USING (MOVIE_NO)
      WHERE MOVIE_NAME LIKE '%' ||  #{searchText} || '%'
      AND FILE_STATUS = 'Y'
      AND SORT_CODE = 20
      ORDER BY MOVIE_RDATE DESC
   </select>
   
   <select id="movListFavor" resultMap="movResultSet">
      SELECT MOVIE_NO, MOVIE_NAME, MOVIE_AGE, MOVIE_RDATE, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME,  COUNT(DECODE(R_SCORE,'G',1)) AS GOOD_SCORE
      FROM MOVIE
      JOIN ATTACHMENT USING (MOVIE_NO)
        LEFT JOIN REVIEW USING (MOVIE_NO)
        WHERE MOVIE_RSTATUS = 'Y'
      AND SYSDATE > TO_CHAR(MOVIE_RDATE,'YYYYMMDD')
      AND FILE_STATUS = 'Y'
      AND SORT_CODE = 20
        AND (R_SORT = 'M' OR R_SORT IS NULL)
        GROUP BY MOVIE_NO, MOVIE_NAME, MOVIE_AGE, MOVIE_RDATE, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME
        ORDER BY  COUNT(R_SCORE) DESC, MOVIE_RDATE DESC
   </select>
   
   <select id="searchList" resultMap="movResultSet">
      SELECT *
      FROM MOVIE
      JOIN GENRE USING(GENRE_CODE)
      JOIN ATTACHMENT USING (MOVIE_NO)
      WHERE MOVIE_NAME LIKE '%' ||  #{searchText} || '%'
      AND FILE_STATUS = 'Y'
      AND SORT_CODE = 20
      ORDER BY MOVIE_RDATE DESC
   </select>
   
   <select id="movieDateList" resultMap="movResultSet">
      SELECT ROWNUM, a.*
      FROM( 
         SELECT DISTINCT(MOVIE_NO), MOVIE_AGE, MOVIE_NAME, MOVIE_RDATE, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME, NVL((SUM(UR_PEOPLE)+SUM(UR_PEOPLE2)), 0) AS RESPEOPLE
         FROM MOVIE
         LEFT JOIN ATTACHMENT USING(MOVIE_NO)
         LEFT JOIN MOVIE_RES USING(MOVIE_NO)
         LEFT JOIN USER_RESMOVIE USING (RES_NO)
         WHERE MOVIE_RSTATUS = 'Y'
         AND TO_CHAR(SYSDATE,'YYYYMMDD') > MOVIE_RDATE
         AND SORT_CODE = 20
         GROUP BY MOVIE_NO, MOVIE_AGE, MOVIE_NAME, MOVIE_RDATE, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME
         ORDER BY RESPEOPLE DESC, MOVIE_RDATE DESC) a
      WHERE 3 >= ROWNUM
   </select>
   
   <select id="movieFavorList" resultMap="movResultSet">
      SELECT ROWNUM, a.*
           FROM( 
           SELECT MOVIE_NO, MOVIE_NAME, MOVIE_AGE, MOVIE_RDATE, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME,   COUNT(DECODE(R_SCORE,'G',1)) AS GOOD_SCORE
         FROM MOVIE
         JOIN ATTACHMENT USING (MOVIE_NO)
           LEFT JOIN REVIEW USING (MOVIE_NO)
           WHERE MOVIE_RSTATUS = 'Y'
         AND TO_CHAR(SYSDATE,'YYYYMMDD') > MOVIE_RDATE
         AND FILE_STATUS = 'Y'
         AND SORT_CODE = 20
           AND (R_SORT = 'M' OR R_SORT IS NULL)
           GROUP BY MOVIE_NO, MOVIE_NAME, MOVIE_AGE, MOVIE_RDATE, FILE_PATH, ORIGIN_FILENAME, RENAME_FILENAME
           ORDER BY  COUNT(R_SCORE) DESC) a
      WHERE 3 >= ROWNUM
   </select>
   
   <select id="placeList" resultMap="resResultSet">
      SELECT *
      FROM MOVIE_CITY
   </select>
   
   <select id="scoreList" resultMap="movResultSet">
      SELECT MOVIE_NO,  COUNT(DECODE(R_SCORE,'G',1)) AS GOOD_SCORE
      FROM MOVIE
        LEFT JOIN REVIEW USING(MOVIE_NO)
        WHERE TO_CHAR(SYSDATE,'YYYYMMDD') > MOVIE_RDATE
        AND (R_SORT = 'M' OR R_SORT IS NULL)
        AND MOVIE_RSTATUS = 'Y'
        GROUP BY MOVIE_NO
        ORDER BY  MOVIE_NO
   </select>
   
   <select id="totalScoreList" resultMap="movResultSet">
      SELECT MOVIE_NO,  COUNT(R_SCORE) AS GOOD_SCORE
      FROM MOVIE
        LEFT JOIN REVIEW USING(MOVIE_NO)
        WHERE TO_CHAR(SYSDATE,'YYYYMMDD') > MOVIE_RDATE
        AND (R_SORT = 'M' OR R_SORT IS NULL)
        AND MOVIE_RSTATUS = 'Y'
        GROUP BY MOVIE_NO
        ORDER BY MOVIE_NO
   </select>
   
   <select id="mScoreList" resultMap="movResultSet">
      SELECT ROWNUM, a.*
      FROM(SELECT MOVIE_NO,  COUNT(DECODE(R_SCORE,'G',1)) AS GOOD_SCORE
            FROM MOVIE
              LEFT JOIN REVIEW USING(MOVIE_NO)
              WHERE TO_CHAR(SYSDATE,'YYYYMMDD') > MOVIE_RDATE
              AND (R_SORT = 'M' OR R_SORT IS NULL)
              AND MOVIE_RSTATUS = 'Y'
              GROUP BY MOVIE_NO
              ORDER BY MOVIE_NO) a
      WHERE 3 >= ROWNUM
   </select>
   
   <select id="mTotalScoreList" resultMap="movResultSet">
      SELECT ROWNUM, a.*
      FROM(SELECT MOVIE_NO,  COUNT(R_SCORE) AS GOOD_SCORE
            FROM MOVIE
              LEFT JOIN REVIEW USING(MOVIE_NO)
              WHERE TO_CHAR(SYSDATE,'YYYYMMDD') > MOVIE_RDATE
              AND (R_SORT = 'M' OR R_SORT IS NULL)
              AND MOVIE_RSTATUS = 'Y'
              GROUP BY MOVIE_NO
              ORDER BY MOVIE_NO) a
      WHERE 3 >= ROWNUM
   </select>
   
</mapper>